drop table "NIRAJ"."CATEGORY" cascade constraints;
drop table "NIRAJ"."CUSTOMER" cascade constraints;
drop table "NIRAJ"."DEPARTMENT" cascade constraints;
drop table "NIRAJ"."DEPT_EMP" cascade constraints;
drop table "NIRAJ"."EMPLOYEE" cascade constraints;
drop table "NIRAJ"."INVOICE" cascade constraints;
drop table "NIRAJ"."JOB_HISTORY" cascade constraints;
drop table "NIRAJ"."ORDER_LINE" cascade constraints;
drop table "NIRAJ"."ORDERS" cascade constraints;
drop table "NIRAJ"."PHONE" cascade constraints;
drop table "NIRAJ"."PROD_VEND_OL" cascade constraints;
drop table "NIRAJ"."PRODUCT" cascade constraints;
drop table "NIRAJ"."JOB_TITLE" cascade constraints;
drop table "NIRAJ"."PROMO_PRICE" cascade constraints;
drop table "NIRAJ"."REGION" cascade constraints;
drop table "NIRAJ"."REGION_STATE" cascade constraints;
drop table "NIRAJ"."SALARY" cascade constraints;
drop table "NIRAJ"."SHIPPING_METHOD" cascade constraints;
drop table "NIRAJ"."VEND_SHIP" cascade constraints;
drop table "NIRAJ"."VENDOR" cascade constraints;
drop table "NIRAJ"."BRAND" cascade constraints;
drop table "NIRAJ"."PRODUCT_DISCOUNT" cascade constraints;
drop table "NIRAJ"."VENDOR_PRICE" cascade constraints;
drop table "NIRAJ"."BRANCH" cascade constraints;
drop table "NIRAJ"."INVENTORY" cascade constraints;
drop table "NIRAJ"."WAREHOUSE" cascade constraints;
drop table "NIRAJ"."PROD_VEND_ORD" cascade constraints;
drop table "NIRAJ"."RETURN_CATEGORY" cascade constraints;
drop table "NIRAJ"."RETURNPROD" cascade constraints;
drop table "NIRAJ"."COMMISSION" cascade constraints;
drop table "NIRAJ"."TAX" cascade constraints;



CREATE TABLE REGION(
    REGION_ID NUMBER(15,0) NOT NULL , 
    TIMEZONE VARCHAR2(40) ,
    CONSTRAINT REGION_PK PRIMARY KEY (REGION_ID)
);

CREATE TABLE shipping_method (
    s_m_id        NUMBER(15,0) NOT NULL,
    ship_method_name   VARCHAR2(30) NOT NULL,
    price              DECIMAL(10,3),
    CONSTRAINT s_method_id_pk PRIMARY KEY ( s_m_id )
);

CREATE TABLE JOB_TITLE(
    JOB_TITLE_ID NUMBER(15,0) NOT NULL,
    JOB_TITLE VARCHAR2(40) NOT NULL,
    CONSTRAINT JOB_TITLE_ID_PK PRIMARY KEY (JOB_TITLE_ID)
);

CREATE TABLE BRAND(
    BRAND_ID NUMBER(10,0) NOT NULL,
    BRAND_NAME VARCHAR2(30),
    CONSTRAINT BRANDS_ID_PK PRIMARY KEY (BRAND_ID)
);

CREATE TABLE CATEGORY (
    CATEGORY_ID NUMBER(15,0) NOT NULL,
    CATEGORY_NAME VARCHAR2(20),
    CONSTRAINT CATEGORY_ID_PK PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE TAX(
    TAX_ID NUMBER(15,0),
    TAX_PERCENT DECIMAL(3,2),
	CONSTRAINT TAX_ID_PK PRIMARY KEY (TAX_ID)
);

CREATE TABLE REGION_STATE(
    RS_ID NUMBER(15,0) NOT NULL,
    STATE_NAME VARCHAR2(30) NOT NULL,
    ABBREVIATION VARCHAR2(2) NOT NULL,
    CITY VARCHAR2(30),
    ZIP NUMBER(15,0) NOT NULL,
    REGION_ID NUMBER(15,0),
    CONSTRAINT REGION_STATE_PK PRIMARY KEY (RS_ID)
    --CONSTRAINT REGION_STATE_FK FOREIGN KEY (REGION_ID) REFERENCES REGION(REGION_ID)
); 


CREATE TABLE branch (
    branch_id        NUMBER(15,0) NOT NULL,
    street_address   VARCHAR2(40),
    postal_code      VARCHAR2(15),
    city             VARCHAR2(15),
    state_province   VARCHAR2(15),
    region_id        NUMBER(15,0),
	CONSTRAINT BRANCH_ID_PK PRIMARY KEY (BRANCH_ID)
    --CONSTRAINT REGION_BRANCH_FK FOREIGN KEY (REGION_ID) REFERENCES REGION (REGION_ID)
);


CREATE TABLE DEPARTMENT(
    DEPARTMENT_ID NUMBER(10,0) NOT NULL,
    DEPARTMENT_NAME VARCHAR2(30),
    CONSTRAINT DEPARTMENT_ID_PK PRIMARY KEY (DEPARTMENT_ID)
    --CONSTRAINT DEPARTMENT_BRANCH_FK FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH (BRANCH_ID)
);


CREATE TABLE salary(
    job_title_id   NUMBER(15,0) NOT NULL,
    salary         VARCHAR2(20),
    CONSTRAINT salary_comp_PK PRIMARY KEY ( job_title_id )
);

CREATE TABLE EMPLOYEE(
EMPLOYEE_ID NUMBER(10,0) NOT NULL,
LNAME VARCHAR2(15) ,
FNAME VARCHAR2(15) ,
STREET VARCHAR2(30),
CITY VARCHAR2(15),
STATE_PROVINCE VARCHAR2(15),
ZIP NUMBER(8,0) ,
DOB DATE ,
HIRE_DATE  DATE ,
JOB_TITLE_ID NUMBER(15,0),
DEPARTMENT_ID NUMBER(10,0),
BRANCH_ID NUMBER(15,0),
CONSTRAINT EMPLOYEE_ID_PK PRIMARY KEY (EMPLOYEE_ID)
--CONSTRAINT EMPLOYEE_JOB_TITLE_FK FOREIGN KEY (JOB_TITLE_ID) REFERENCES JOB_TITLE (JOB_TITLE_ID),
--CONSTRAINT EMPLOYEE_DEPT_FK FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);


CREATE TABLE DEPT_EMP(
    EMPLOYEE_ID NUMBER(10,0),
    DEPARTMENT_ID NUMBER(10,0),
    CONSTRAINT DEPT_EMP_EMPLOYEE_ID_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
    --CONSTRAINT DEPT_EMP_DEPARTMENT_ID_FK FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);


CREATE TABLE JOB_HISTORY(
    EMPLOYEE_ID NUMBER(10,0) NOT NULL,
    START_DATE DATE,
    END_DATE DATE,
    CONSTRAINT EMPLOYEE_JOB_HISTORY_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE CUSTOMER(
  CUSTOMER_ID NUMBER(15,0) NOT NULL,
  LNAME VARCHAR2(20),
  FNAME VARCHAR2(20),
  STREET_ADDRESS VARCHAR2(30),
  CITY VARCHAR2(15),
  STATE_PROVINCE VARCHAR2(15),
  POSTAL_CODE NUMBER(8,0),
  BRANCH_ID NUMBER(15,0),
  CONSTRAINT CUSTOMER_ID_PK PRIMARY KEY (CUSTOMER_ID)
  --CONSTRAINT CUSTOMER_BRANCH_ID_FK FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH (BRANCH_ID),
);


CREATE TABLE PHONE(
  PHONE_ID NUMBER(10,0),
  CONTACT_NAME VARCHAR2(20),
  PHONE_NUMBER VARCHAR(15),
  CONTACT_TYPE VARCHAR2(15),
  CUSTOMER_ID NUMBER(15,0),
  CONSTRAINT PHONE_ID_PK PRIMARY KEY (PHONE_ID)
  --CONSTRAINT CUSTOMER_PHONE_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID)
);

CREATE TABLE PRODUCT(
    PRODUCT_ID NUMBER(15,0) NOT NULL,
    PRODUCT_NAME VARCHAR2(80),
    UNIT_PRICE NUMBER(7,0),
    UNIT_COST NUMBER(7,0),
    BRAND_ID NUMBER(15,0),
    CATEGORY_ID NUMBER(15,0),
    CONSTRAINT PRODUCT_ID_PK PRIMARY KEY (PRODUCT_ID)
    --CONSTRAINT PRODUCT_BRANDS_FK FOREIGN KEY (BRAND_ID) REFERENCES BRAND (BRAND_ID),
    --CONSTRAINT PRODUCT_CATEGORY_FK FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID)
);

CREATE TABLE PRODUCT_DISCOUNT(
    DISCOUNT_ID NUMBER(10,0) NOT NULL,
    DISCOUNT_PERCENT DECIMAL(3,2),
    DISCOUNT_AMT NUMBER(8,0),
    QUANTITY NUMBER(10,0),
    PRODUCT_ID NUMBER(10,0),
    CONSTRAINT DISCOUNT_ID_PK PRIMARY KEY (DISCOUNT_ID)
    --CONSTRAINT PRODUCT_DISCOUNT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
);


CREATE TABLE PROMO_PRICE(
    PROMO_PRICE_ID NUMBER(10,0) NOT NULL,
    PROMO_PRICE NUMBER(7,0),
    START_DATE DATE,
    END_DATE DATE,
    PRODUCT_ID NUMBER(10,0),
    CONSTRAINT PROMO_PRICE_PK PRIMARY KEY (PROMO_PRICE_ID)
    --CONSTRAINT PRODUCT_PROMO_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
);


CREATE TABLE WAREHOUSE(
    WAREHOUSE_ID NUMBER(15,0) NOT NULL,
    STREET_ADDRESS VARCHAR2(30),
    CITY VARCHAR2(30),
    STATE VARCHAR2(5),
    POSTAL_CODE NUMBER(10,0),
    PHONE VARCHAR2(15),
    REGION_ID NUMBER(15,0),
    CONSTRAINT WAREHOUSE_ID_PK PRIMARY KEY (WAREHOUSE_ID)
    --CONSTRAINT WAREHOUSES_REGION_ID_FK FOREIGN KEY (REGION_ID) REFERENCES REGION (REGION_ID)
);


CREATE TABLE INVENTORY(
    INVENTORY_ID NUMBER(15,0) NOT NULL,
    QOH NUMBER(15,0),
    REORDER_LEVEL NUMBER(15,0),
    REORDER_QUANTITY NUMBER(15,0),
    --REORDER_DATE DATE,
    PRODUCT_ID NUMBER(25,0) NOT NULL,
    WAREHOUSE_ID NUMBER(15,0) NOT NULL,
    BACKORDER NUMBER(15,0),
    CONSTRAINT INVENTORY_ID_PK PRIMARY KEY (INVENTORY_ID)
    --CONSTRAINT INVENTORY_WAREHOUSES_FK FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSE (WAREHOUSE_ID),
    --CONSTRAINT INVENTORY_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
);


CREATE TABLE ORDERS(
    ORDER_ID NUMBER(15,0) NOT NULL,
    ORDER_DATE DATE,
    REQUIRED_DATE DATE,
    SHIPPED_DATE DATE,
    SHIPPING_CHARGE NUMBER(10,0),
    SUBTOTAL NUMBER(10,0),
    TOTAL NUMBER(10,0),
    S_M_ID NUMBER(10,0),
    CUSTOMER_ID NUMBER(15,0),
    BRANCH_ID NUMBER(15,0),
    EMPLOYEE_ID NUMBER(10,0),
	TAX_ID NUMBER(15,0),
    CONSTRAINT ORDERS_ORDERID_PK PRIMARY KEY (ORDER_ID),
    CONSTRAINT ORDERS_S_METHOD_FK FOREIGN KEY (S_M_ID) REFERENCES SHIPPING_METHOD (S_M_ID)
    --CONSTRAINT ORDERS_CUSTOMER_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
    --CONSTRAINT ORDERS_BRANCH_FK FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH (BRANCH_ID),
    --CONSTRAINT ORDERS_EMPLOYEE_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
);



CREATE TABLE ORDER_LINE(
    ORDER_LINE_ID NUMBER(10,0) NOT NULL,
    QTY NUMBER(10,0),
    ORDER_ID NUMBER(10,0),
    PRODUCT_ID NUMBER(10,0),
    CONSTRAINT ORDER_LINE_ID_PK PRIMARY KEY (ORDER_LINE_ID)
    --CONSTRAINT OL_ORDER_FK FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID),
    --CONSTRAINT OL_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
);


CREATE TABLE VENDOR(
    VENDOR_ID NUMBER(15,0) NOT NULL,
    VENDOR_NAME VARCHAR2(20),
    STREET_ADDRESS VARCHAR2(30),
    CITY VARCHAR2(15),
    STATE VARCHAR2(15),
    ZIP NUMBER(15,0),
    PHONE_NUMBER VARCHAR(15),
    CONSTRAINT VENDOR_ID_PK PRIMARY KEY (VENDOR_ID)
);


CREATE TABLE VENDOR_PRICE(
    VEND_PRICE_ID NUMBER(10,0) NOT NULL,
    VENDOR_PRICE NUMBER(15,0),
    DISCOUNT NUMBER(7,0),
    START_DATE DATE,
    END_DATE DATE,
    PRODUCT_ID NUMBER(10,0),
    VENDOR_ID NUMBER(15,0),
    CONSTRAINT VENDOR_PRICE_ID_PK PRIMARY KEY (VEND_PRICE_ID)
    --CONSTRAINT VENDOR_PRICE_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID),
    --CONSTRAINT VENDOR_PRICE_VENDOR_FK FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR (VENDOR_ID)
);

CREATE TABLE PROD_VEND_ORD(
    PV_ORD_ID NUMBER(15,0) NOT NULL,
    ORDER_DATE DATE,
    EXPECTED_SHIP_DATE DATE,
    SHIPPED_DATE DATE,
    TOTAL_COST NUMBER(8,0),
    VENDOR_ID NUMBER(15,0),
    CONSTRAINT PROD_VEND_ORD_ID_PK PRIMARY KEY (PV_ORD_ID)
    --CONSTRAINT PRODUCT_VENDOR_FK FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR (VENDOR_ID)
);


CREATE TABLE PROD_VEND_OL(
    PV_OL_ID NUMBER(10,0) NOT NULL,
    PRODUCT_ID NUMBER(10,0),
    PV_ORD_ID NUMBER(10,0),
	QTY NUMBER(10,0),
    CONSTRAINT PV_OL_ID_PK PRIMARY KEY (PV_OL_ID)
    --CONSTRAINT PV_OL_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID),
    --CONSTRAINT PV_OL_PV_ORD_FK FOREIGN KEY (PV_ORD_ID) REFERENCES PROD_VEND_ORD (PV_ORD_ID)
);


CREATE TABLE VEND_SHIP(
    VEND_SHIP_ID NUMBER(10,0) NOT NULL,
    VENDOR_ID NUMBER(10,0),
    S_M_ID NUMBER(10,0),
    CONSTRAINT VEND_SHIP_ID_PK PRIMARY KEY (VEND_SHIP_ID)
    --CONSTRAINT VEND_SHIP_S_METHOD_ID_FK FOREIGN KEY (s_m_id) REFERENCES SHIPPING_METHOD(s_m_id)
    
);

CREATE TABLE INVOICE(
    INVOICE_NUMBER NUMBER(15,0) NOT NULL,
    INVOICE_DATE DATE,
    AMOUNT NUMBER(10,0),
    AMOUNT_PAID NUMBER(10,0),
    ORDER_ID NUMBER(15,0),
    CONSTRAINT INVOICE_NUMBER_PK PRIMARY KEY (INVOICE_NUMBER)
    --CONSTRAINT INVOICE_NUMBER_ORDER_FK FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID)
);

CREATE TABLE RETURN_CATEGORY(
    RET_CAT_ID NUMBER(15,0),
    DESCRIPTION VARCHAR(20),
    CONSTRAINT RETURN_CATEGORY_PK PRIMARY KEY (RET_CAT_ID)
);


create table RETURNPROD (
    RETURN_ID NUMBER(15,0),	
    ORDER_LINE_ID NUMBER(15,0) , 
    RETR_QTY NUMBER(15,0),
	DATE_RETURNED DATE,
    REFUND NUMBER(15,0) ,
    RET_CAT_ID NUMBER(15,0) ,
	constraint RETURNPROD_RETURNID_PK primary key (RETURN_ID) 
    );

   
create table COMMISSION (
    COMMISSION_ID NUMBER(15,0) , 
    COMMISSION NUMBER(38,0),
	PAID_DATE DATE,	
	EMPLOYEE_ID NUMBER(15,0),
	constraint COMMISSION_PK primary key (COMMISSION_ID)
	);
	


alter table region_state
add CONSTRAINT REGION_STATE_FK FOREIGN KEY (REGION_ID) REFERENCES REGION(REGION_ID);

alter table branch 
add CONSTRAINT REGION_BRANCH_FK FOREIGN KEY (REGION_ID) REFERENCES REGION (REGION_ID);

alter table employee
add CONSTRAINT EMPLOYEE_JOB_TITLE_FK FOREIGN KEY (JOB_TITLE_ID) REFERENCES JOB_TITLE (JOB_TITLE_ID);
alter table employee
add CONSTRAINT EMPLOYEE_DEPT_FK FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID);

alter table dept_emp
add CONSTRAINT DEPT_EMP_DEPARTMENT_ID_FK FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID);

alter table customer 
add CONSTRAINT CUSTOMER_BRANCH_ID_FK FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH (BRANCH_ID);

alter table phone
add CONSTRAINT CUSTOMER_PHONE_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID);

alter table product
add CONSTRAINT PRODUCT_BRANDS_FK FOREIGN KEY (BRAND_ID) REFERENCES BRAND (BRAND_ID);
alter table product
add CONSTRAINT PRODUCT_CATEGORY_FK FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID);

alter table product_discount
add CONSTRAINT PRODUCT_DISCOUNT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);

alter table promo_price
add CONSTRAINT PRODUCT_PROMO_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);

alter table warehouse
add CONSTRAINT WAREHOUSES_REGION_ID_FK FOREIGN KEY (REGION_ID) REFERENCES REGION (REGION_ID);

alter table inventory
add CONSTRAINT INVENTORY_WAREHOUSES_FK FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSE (WAREHOUSE_ID);
alter table inventory
add CONSTRAINT INVENTORY_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);

alter table orders
add CONSTRAINT ORDERS_CUSTOMER_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID);
alter table orders
add CONSTRAINT ORDERS_BRANCH_FK FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH (BRANCH_ID);
alter table orders
add  CONSTRAINT ORDERS_EMPLOYEE_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);
alter table orders
add  CONSTRAINT ORDERS_TAX_FK FOREIGN KEY (TAX_ID) REFERENCES TAX (TAX_ID);

alter table order_line
add CONSTRAINT OL_ORDER_FK FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID);
alter table order_line
add CONSTRAINT OL_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);

alter table vendor_price
add CONSTRAINT VENDOR_PRICE_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);
alter table vendor_price
add CONSTRAINT VENDOR_PRICE_VENDOR_FK FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR (VENDOR_ID);

alter table prod_vend_ord
add CONSTRAINT PRODUCT_VENDOR_FK FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR (VENDOR_ID);

alter table prod_vend_ol
add CONSTRAINT PV_OL_PRODUCT_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);
alter table prod_vend_ol
add CONSTRAINT PV_OL_PV_ORD_FK FOREIGN KEY (PV_ORD_ID) REFERENCES PROD_VEND_ORD (PV_ORD_ID);

alter table vend_ship
add CONSTRAINT VEND_SHIP_S_METHOD_ID_FK FOREIGN KEY (s_m_id) REFERENCES SHIPPING_METHOD(s_m_id);

alter table INVOICE
add constraint INVOICE_NUMBER_ORDER_FK FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID);

alter table returnprod
add CONSTRAINT RETURNPROD_FK FOREIGN KEY (ORDER_LINE_ID) REFERENCES ORDER_LINE (ORDER_LINE_ID);
alter table returnprod
add CONSTRAINT RET_CAT_FK FOREIGN KEY (RET_CAT_ID) REFERENCES RETURN_CATEGORY (RET_CAT_ID);

alter table COMMISSION
add CONSTRAINT COMMISSION_EMPLOYEE_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);



